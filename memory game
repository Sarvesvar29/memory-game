import 'dart:async';
import 'dart:math';

import 'package:flutter/material.dart';

void main() {
  runApp(MemoryGameApp());
}

class MemoryGameApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: StartPage(),
    );
  }
}

class StartPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Memory Game'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => MemoryGame()),
            );
          },
          child: Text('Start Game'),
        ),
      ),
    );
  }
}

class MemoryGame extends StatefulWidget {
  @override
  _MemoryGameState createState() => _MemoryGameState();
}

class _MemoryGameState extends State<MemoryGame> {
  List<int> _numbers = [];
  List<bool> _flipped = [];
  bool _processing = false;
  int _firstIndex = -1;
  int _secondIndex = -1;

  @override
  void initState() {
    super.initState();
    _initializeGame();
  }

  void _initializeGame() {
    setState(() {
      _numbers = List.generate(16, (index) => index ~/ 2 + 1)..shuffle();
      _flipped = List.filled(16, false);
      _processing = false;
      _firstIndex = -1;
      _secondIndex = -1;
    });
  }

  Future<void> _flipCard(int index) async {
    if (!_processing && !_flipped[index]) {
      setState(() {
        _flipped[index] = true;
      });
      if (_firstIndex == -1) {
        _firstIndex = index;
      } else {
        _secondIndex = index;
        _processing = true;
        await Future.delayed(Duration(seconds: 1));
        if (_numbers[_firstIndex] != _numbers[_secondIndex]) {
          setState(() {
            _flipped[_firstIndex] = false;
            _flipped[_secondIndex] = false;
          });
        }
        _firstIndex = -1;
        _secondIndex = -1;
        _processing = false;
        if (_flipped.every((element) => element)) {
          // All pairs have been matched
          _showWinningEffect();
        }
      }
    }
  }

  void _showWinningEffect() {
    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Congratulations!'),
          content: Text('You have won the game!'),
          actions: <Widget>[
            TextButton(
              onPressed: () {
                Navigator.of(context).pop();
                _initializeGame();
              },
              child: Text('Play Again'),
            ),
          ],
        );
      },
    );

    // Trigger the color papers falling effect
    _startConfettiAnimation();
  }

  void _startConfettiAnimation() {
    // Implementation of the color papers falling effect
    // Add your code here for the celebration effect
    // You can use libraries like 'flutter_confetti' to achieve this
    // Example: https://pub.dev/packages/flutter_confetti
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Memory Game'),
        actions: [
          IconButton(
            icon: Icon(Icons.refresh),
            onPressed: _initializeGame,
          ),
        ],
      ),
      body: GridView.builder(
        padding: EdgeInsets.all(8.0),
        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 4,
          crossAxisSpacing: 8.0,
          mainAxisSpacing: 8.0,
        ),
        itemCount: 16,
        itemBuilder: (BuildContext context, int index) {
          return GestureDetector(
            onTap: () => _flipCard(index),
            child: Container(
              color: _flipped[index] ? Colors.blue : Colors.grey,
              child: Center(
                child: _flipped[index]
                    ? Text('${_numbers[index]}',
                    style: TextStyle(fontSize: 24.0, color: Colors.white))
                    : null,
              ),
            ),
          );
        },
      ),
    );
  }
}
